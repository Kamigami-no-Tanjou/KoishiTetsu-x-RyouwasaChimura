local EUtils = require 'Chimura.EntitiesGlobalFunctions'

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
---
--- A class representing a Language object
--- Its attributes are :
--- - ID            : INT NOT NULL UNSIGNED (PRIMARY KEY) (DatabaseGenerated)
--- - Abbreviation  : VARCHAR(2) NOT NULL
--- - Name          : VARCHAR(100) NOT NULL
--- - Supported     : BOOL NOT NULL
---
--- @class Language
--- @author RedNeath
--- @since 1.0.0
---
--- @licence MIT (https://github.com/Kamigami-no-Tanjou/KoishiTetsu-x-RyouwasaChimura/blob/main/LICENSE)
---
Language = {
    id = nil, -- : int
    abbreviation = nil, -- : string
    name = nil, -- : string
    supported = nil -- : boolean
}

---
--- The Language's constructor (will be used to rebuild Language object instances out of a table retrieved from a json
--- string)
---
--- @param object table The table to create an object from (leave nil if not used).
--- @param id number The ID of the line of Language it represents.
--- @param abbreviation string The ISO 2 digit abbreviation for the Language.
--- @param name string The ISO official name of the Language.
--- @param supported boolean Whether the bot can speak this Language or not.
---
--- @return Language the new instance of Language.
---
function Language:new(object,
                      id,
                      abbreviation,
                      name,
                      supported
)
    --For safety (if the table is nil)
    object = object or {}

    --We provide 'object' Language's metamethods & properties
    setmetatable(object, self)
    self.__index = self

    --And we finally give it its values
    --[[
    Important here to affect values to 'object' and not 'self' !! Because editing 'self' would mean modifying the
    prototype, hence modifying all its sub-classes/objects!
    --]]
    object.id = tonumber(id or object.id) or nil
    object.abbreviation = abbreviation or object.abbreviation or nil
    object.name = name or object.name or nil
    object.supported = EUtils.affectBool(supported or object.supported) or nil

    return object
end
