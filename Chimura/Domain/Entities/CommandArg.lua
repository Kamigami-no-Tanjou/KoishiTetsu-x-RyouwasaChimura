require 'Chimura.EntitiesGlobalFunctions'

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
---
--- A class representing a CommandArg object
--- Its attributes are :
--- - ID                : INT NOT NULL UNSIGNED (PRIMARY KEY) (DatabaseGenerated)
--- - Name              : VARCHAR NOT NULL
--- - Description       : VARCHAR NOT NULL
--- - Type              : CHAR NOT NULL
--- - Optional          : BOOL NOT NULL
--- - DefaultCommandID  : INT NULLABLE UNSIGNED
--- - CustomCommandID   : INT NULLABLE UNSIGNED
---
--- @class CommandArg
--- @author RedNeath
--- @since 1.0.0
---
--- @licence MIT (https://github.com/Kamigami-no-Tanjou/KoishiTetsu-x-RyouwasaChimura/blob/main/LICENSE)
---
CommandArg = {
    id = 0,
    name = "",
    description = "",
    type = '',
    optional = false,
    defaultCommandId = 0,
    customCommandId = 0
}

---
--- The CommandArg's constructor (will be used to rebuild CommandArg object instances out of a table retrieved from a
--- json string)
---
--- @param object table The table to create an object from (leave nil if not used).
--- @param id number The ID of the line of CommandArg it represents.
--- @param name string The name of the command argument.
--- @param description string The description this argument.
--- @param type string The type of this argument (boolean, string, number...).
--- @param optional boolean Whether this argument is optional or mandatory for its command to execute correctly.
--- @param defaultCommandId number The ID of the default command it is linked to.
--- @param customCommandId number The ID of the custom command it is linked to.
---
--- @return CommandArg the new instance of CommandArg.
---
function CommandArg:new(object,
                        id,
                        name,
                        description,
                        type,
                        optional,
                        defaultCommandId,
                        customCommandId
)
    --For safety (if the table is nil)
    object = object or {}

    --We provide 'object' CommandArg's metamethods & properties
    setmetatable(object, self)
    self.__index = self

    --And we finally give it its values
    --[[
    Important here to affect values to 'object' and not 'self' !! Because editing 'self' would mean modifying the
    prototype, hence modifying all its sub-classes/objects!
    --]]
    object.id = tonumber(id or object.id) or nil
    object.name = name or object.name or nil
    object.description = description or object.description or nil
    object.type = type or object.type or nil
    object.optional = affectBool(tonumber(optional or object.optional)) or nil
    object.defaultCommandId = tonumber(defaultCommandId or object.defaultCommandId) or nil
    object.customCommandId = tonumber(customCommandId or object.customCommandId) or nil

    return object
end